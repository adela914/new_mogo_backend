type User @entity {
  id: ID! @id
  firstName: String @column
  lastName: String @column
  email: String! @column
  password: String! @column
  restaurants: [Restaurant] @link

  """
  Users that this user is following.
  """
  following: [User] @link

  """
  Users that this user is followed by.
  """
  followers: [User] @link
}

type Restaurant @entity {
  id: ID! @id
  name: String! @column
  author: User! @link
  description: String! @column
  location: String
  likedBy: [User] @link
  likes: Int
}

type Query {
  currentUser: User
  restaurant(id: ID!): Restaurant
  user(id: ID!): User
  users: [User]
  restaurants: [Restaurant]
}

# type CurrentUserOutput {
#   id: ID! @id
#   firstName: String @column
#   lastName: String @column
#   email: String! @column
#   restaurants: [Restaurant] @link
#   following: [User] @link
#   followers: [User] @link
# }

"""
Publish post input.
"""
input ShareRestaurantInput {
  """
  Restaurant title.
  """
  name: String!
  """
  Restaurant content.
  """
  description: String!
  location: String
}

input UpdateRestaurantInput {
  id: ID!
  name: String
  description: String
  location: String
}

input userRegisterInput {
  email: String!
  password: String!
}

input userLoginInput {
  email: String!
  password: String!
}

input CreateLoginInput {
  """
  Restaurant title.
  """
  firstName: String!
  """
  Restaurant content.
  """
  lastName: String!
}

type userLoginOutput {
  email: String!
  password: String!
  token: String!
}

type userRegisterOutput {
  email: String!
  password: String!
  token: String!
}

type likeResOutput {
  likes: Int!
}

type Mutation {
  """
  Share restaurant.
  """
  shareRestaurant(input: ShareRestaurantInput!): Restaurant!

  """
  Update restaurant.
  """
  updateRestaurant(input: UpdateRestaurantInput!): Restaurant!
  """
  Create user.
  """
  register(input: userRegisterInput): userRegisterOutput!

  login(input: userLoginInput): userLoginOutput!

  """
  Follow user.
  Returns the updated number of followers.
  """
  followUser(
    """
    User's ID to follow.
    """
    userId: ID!
  ): Int!

  """
  Unfollow user.
  Returns the updated number of followers.
  """
  unfollowUser(
    """
    User's ID to unfollow.
    """
    userId: ID!
  ): Int!

  """
  Like post.
  Returns the updated number of likes received.
  """
  likeRestaurant(
    """
    Post's ID to like.
    """
    restaurantId: ID!
  ): likeResOutput!
}
