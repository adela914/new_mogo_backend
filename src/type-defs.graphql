type User {
  """
  User ID.
  """
  id: ID!

  """
  User's first name.
  """
  firstName: String!

  """
  User's last name.
  """
  lastName: String!

  # User's e-mail address.
  # email: TODO: Define type.

  """
  Posts published by user.
  """
  restaurants: [Restaurant]

  """
  Users that this user is following.
  """
  following: [User]

  """
  Users that this user is followed by.
  """
  followers: [User]
}

type Restaurant {
  """
  Post ID.
  """
  id: ID!

  """
  Post title.
  """
  name: String!

  """
  Post content.
  """
  description: String!

  """
  Post Author.
  """
  author: User!

  # Post published timestamp.
  # publishedAt: TODO: Define type.

  """
  Users who like this post.
  """
  likedBy: [User]
}

type Query {
  """
  Get post by ID.
  """
  restaurant(id: ID!): Restaurant
}

"""
Publish post input.
"""
input ShareRestaurantInput {
  """
  Restaurant title.
  """
  name: String!

  """
  Restaurant content.
  """
  description: String!
}

type Mutation {
  """
  Share post.
  """
  shareRestaurant(input: ShareRestaurantInput!): Restaurant!

  """
  Follow user.
  Returns the updated number of followers.
  """
  followUser(
    """
    User's ID to follow.
    """
    userId: ID!
  ): Int!

  """
  Unfollow user.
  Returns the updated number of followers.
  """
  unfollowUser(
    """
    User's ID to unfollow.
    """
    userId: ID!
  ): Int!

  """
  Like post.
  Returns the updated number of likes received.
  """
  likeRestaurant(
    """
    Post's ID to like.
    """
    restaurantId: ID!
  ): Int!
}
